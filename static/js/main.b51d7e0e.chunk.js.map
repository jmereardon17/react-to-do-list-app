{"version":3,"sources":["components/AddTaskForm.js","components/Header.js","components/Task.js","components/App.js","index.js"],"names":["AddTaskForm","props","type","className","placeholder","onClick","handleSubmit","Header","title","lead","Task","taskId","id","task","onChange","handleCheckbox","removeTask","App","state","tasks","storedTasks","taskCount","localStorage","length","i","getItem","push","setState","prevState","prevTaskId","e","preventDefault","input","document","querySelector","value","addTask","checkbox","target","label","parentNode","checked","classList","add","remove","setItem","newTask","removeItem","filter","this","map","key","toString","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOAqBeA,EAnBK,SAACC,GACnB,OACE,8BACE,2BACEC,KAAK,OACLC,UAAU,aACVC,YAAY,sBAGd,4BACEF,KAAK,SACLC,UAAU,UACVE,QAAUJ,EAAMK,cAHlB,cCESC,EAVA,SAACN,GACd,OACE,4BAAQE,UAAU,cAChB,wBAAIA,UAAU,aAAcF,EAAMO,OAClC,wBAAIL,UAAU,YAAaF,EAAMQ,MACjC,kBAAC,EAAD,CAAaH,aAAeL,EAAMK,iBCazBI,EAnBF,SAACT,GAEZ,IAAMU,EAASV,EAAMW,GAErB,OACE,wBAAIT,UAAU,QACZ,2BAAOA,UAAU,sBAAuBF,EAAMY,KAC5C,2BACEX,KAAK,WACLC,UAAU,YACVW,SAAWb,EAAMc,iBACnB,0BAAMZ,UAAU,eAGlB,4BAAQA,UAAU,aAAaE,QAAU,kBAAMJ,EAAMe,WAAWL,KAAhE,SCuFSM,E,4MAjGbC,MAAQ,CACNC,MAAO,I,EAGTC,YAAc,WACZ,IAAID,EAAQ,GACNE,EAAYC,aAAaC,OAC/B,GAAIF,EAAY,EACd,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAWG,GAAK,EAAG,CACtC,IAAMX,EAAOS,aAAaG,QAAb,eAA6BD,IAC1CL,EAAMO,KAAK,CAAEb,KAAMA,EAAMD,GAAIY,IAGjC,EAAKG,UAAU,SAAAC,GACb,MAAO,CACLT,MAAOS,EAAUT,MAAQA,O,EAU/BU,WAAaP,aAAaC,O,EAE1BjB,aAAe,SAACwB,GACdA,EAAEC,iBACF,IAAMC,EAAQC,SAASC,cAAc,eAC/BrB,EAAOmB,EAAMG,MACnB,EAAKC,QAAQvB,GACbmB,EAAMG,MAAQ,I,EAGhBpB,eAAiB,SAACe,GAChB,IAAMO,EAAWP,EAAEQ,OACbC,EAAQF,EAASG,WACvBH,EAASI,QACLF,EAAMG,UAAUC,IAAI,UACpBJ,EAAMG,UAAUE,OAAO,W,EAG7BR,QAAU,SAACvB,GAET,EAAKgB,YAAc,EAEnBP,aAAauB,QAAb,eAA6B,EAAKhB,YAAlC,UAAmDhB,IACnD,IAAMiC,EAAUxB,aAAaG,QAAb,eAA6B,EAAKI,aAElD,EAAKF,UAAU,SAAAC,GAAS,MAAK,CACzBT,MAAM,GAAD,mBACAS,EAAUT,OADV,CAEH,CACEN,KAAMiC,EACNlC,GAAI,EAAKiB,mB,EAOnBb,WAAa,SAACL,GAEZW,aAAayB,WAAb,eAAgCpC,IAEhC,EAAKgB,UAAU,SAAAC,GACb,MAAO,CACLT,MAAOS,EAAUT,MAAM6B,QAAQ,SAAAnC,GAAI,OAAIA,EAAKD,KAAOD,U,kEA/CvDsC,KAAK7B,gB,+BAoDG,IAAD,OACP,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,CACEK,MAAM,aACNC,KAAK,0BACLH,aAAe2C,KAAK3C,eAEtB,wBAAIH,UAAU,cACV8C,KAAK/B,MAAMC,MAAM+B,KAAI,SAAArC,GAAI,OACzB,kBAAC,EAAD,CACEA,KAAMA,EAAKA,KACXD,GAAIC,EAAKD,GACTuC,IAAKtC,EAAKD,GAAGwC,WACbrC,eAAgB,EAAKA,eACrBC,WAAY,EAAKA,sB,GA1FbqC,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvB,SAASwB,eAAe,U","file":"static/js/main.b51d7e0e.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nconst AddTaskForm = (props) => {\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        className=\"task-field\"\r\n        placeholder=\"What needs doing?\"\r\n      />\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn add\"\r\n        onClick={ props.handleSubmit }>\r\n        Add Task\r\n    </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddTaskForm;","import React from 'react';\r\nimport AddTaskForm from './AddTaskForm';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <h1 className=\"app-title\">{ props.title }</h1>\r\n      <h2 className=\"app-lead\">{ props.lead }</h2>\r\n      <AddTaskForm handleSubmit={ props.handleSubmit } />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n  const taskId = props.id;\r\n\r\n  return (\r\n    <li className=\"task\">\r\n      <label className=\"checkbox-container\">{ props.task }\r\n        <input \r\n          type=\"checkbox\" \r\n          className=\"completed\"\r\n          onChange={ props.handleCheckbox } />\r\n        <span className=\"checkmark\"></span>\r\n      </label>\r\n\r\n      <button className=\"btn delete\" onClick={ () => props.removeTask(taskId) }> x </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Task from './Task';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    tasks: []\r\n  };\r\n\r\n  storedTasks = () => {\r\n    let tasks = [];\r\n    const taskCount = localStorage.length;\r\n    if (taskCount > 0) {\r\n      for (let i = 1; i <= taskCount; i += 1) {\r\n        const task = localStorage.getItem(`task-${i}`);\r\n        tasks.push({ task: task, id: i })\r\n      }\r\n    }\r\n    this.setState( prevState => {\r\n      return {\r\n        tasks: prevState.tasks = tasks\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.storedTasks()\r\n  }\r\n\r\n  // Task id counter variable\r\n  prevTaskId = localStorage.length;\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const input = document.querySelector('.task-field');\r\n    const task = input.value;\r\n    this.addTask(task);\r\n    input.value = '';\r\n  }\r\n\r\n  handleCheckbox = (e) => {\r\n    const checkbox = e.target;\r\n    const label = checkbox.parentNode;\r\n    checkbox.checked\r\n      ? label.classList.add('strike')\r\n      : label.classList.remove('strike')\r\n  }\r\n\r\n  addTask = (task) => {\r\n    // Update the task id counter\r\n    this.prevTaskId += 1;\r\n    // Add task to localStorage\r\n    localStorage.setItem(`task-${this.prevTaskId}`, `${task}`);\r\n    const newTask = localStorage.getItem(`task-${this.prevTaskId}`);\r\n    // Update state\r\n    this.setState( prevState => ({\r\n        tasks: [\r\n          ...prevState.tasks,\r\n          {\r\n            task: newTask,\r\n            id: this.prevTaskId\r\n          }\r\n        ]\r\n       }\r\n    ));\r\n  }\r\n\r\n  removeTask = (taskId) => {\r\n    // Remove task from localStorage\r\n    localStorage.removeItem(`task-${taskId}`);\r\n    // Update State\r\n    this.setState( prevState => {\r\n      return {\r\n        tasks: prevState.tasks.filter( task => task.id !== taskId)\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Header \r\n          title=\"To Do List\"\r\n          lead=\"An app built with React\"\r\n          handleSubmit={ this.handleSubmit }\r\n        />\r\n        <ul className=\"to-do-list\">\r\n          { this.state.tasks.map(task =>\r\n            <Task\r\n              task={task.task}\r\n              id={task.id}\r\n              key={task.id.toString()}\r\n              handleCheckbox={this.handleCheckbox}\r\n              removeTask={this.removeTask}\r\n            />\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}